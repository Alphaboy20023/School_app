# Generated by Django 5.2 on 2025-06-18 12:32

import datetime
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts_app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_name', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True, max_length=255)),
                ('event_date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('event_type', models.CharField(choices=[('Academic', 'Academic'), ('Holiday', 'Holiday'), ('Sport', 'Sport'), ('Cultural', 'Cultural'), ('Deadline', 'Deadline')], default='Academic')),
            ],
            options={
                'ordering': ['event_date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=5000)),
                ('content', models.CharField(blank=True, max_length=5000)),
                ('is_image', models.ImageField(null=True, upload_to='others/')),
                ('likes', models.ManyToManyField(related_name='liked_posts', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=50)),
                ('information', models.CharField(blank=True, max_length=10000)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('dept_code', models.CharField(max_length=10, unique=True)),
                ('faculty', models.CharField(choices=[('Faculty of Science', 'Faculty of Science'), ('Faculty of Arts', 'Faculty of Arts'), ('Faculty of Engineering', 'Faculty of Engineering'), ('Faculty of Education', 'Faculty of Education'), ('Faculty of Clinical Sciences', 'Faculty of Clinical Science'), ('Faculty of Commerce and Business', 'Faculty of Commerce and Business'), ('Fcaulty of Allied Health Sciences', 'Fcaulty of Allied Health Sciences'), ('Faculty of Law', 'Faculty of Law'), ('Faculty of Management Sciences', 'Faculty of Management Sciences'), ('School of Transport', 'School of Transport'), ('Faculty of Social Sciences', 'Faculty of Social Sciences'), ('School of Post Graduate Studies', 'School of Post Graduate Studies')], max_length=100)),
                ('hod', models.OneToOneField(limit_choices_to={'is_hod': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='head_of_department', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course_name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('credit_units', models.PositiveSmallIntegerField()),
                ('level', models.PositiveSmallIntegerField(choices=[(100, '100'), (200, '200'), (300, '300'), (400, '400')], default=100)),
                ('semester', models.CharField(choices=[('First Semester', 'First Semester'), ('Second Semester', 'Second Semester')], max_length=20)),
                ('lecturer', models.ManyToManyField(limit_choices_to={'user_type': 'Lecturer'}, related_name='teach_courses', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_app.department')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=9000))),
                ('total_marks', models.PositiveIntegerField()),
                ('semester', models.CharField(choices=[('First Semester', 'First Semester'), ('Second Semester', 'Second Semester')], max_length=100)),
                ('exam_type', models.CharField(choices=[('Test', 'Test'), ('Main Exam', 'Main Exam')], default='Main Exam', max_length=20)),
                ('academic_session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='school_app.academicsession')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_app.course')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_app.department')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IdentityCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('picture', models.ImageField(upload_to='students/')),
                ('faculty', models.CharField(choices=[('Faculty of Science', 'Faculty of Science'), ('Faculty of Arts', 'Faculty of Arts'), ('Faculty of Engineering', 'Faculty of Engineering'), ('Faculty of Education', 'Faculty of Education'), ('Faculty of Clinical Sciences', 'Faculty of Clinical Science'), ('Faculty of Commerce and Business', 'Faculty of Commerce and Business'), ('Fcaulty of Allied Health Sciences', 'Fcaulty of Allied Health Sciences'), ('Faculty of Law', 'Faculty of Law'), ('Faculty of Management Sciences', 'Faculty of Management Sciences'), ('School of Transport', 'School of Transport'), ('Faculty of Social Sciences', 'Faculty of Social Sciences'), ('School of Post Graduate Studies', 'School of Post Graduate Studies')], default=None, max_length=50)),
                ('admission_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentId', to='accounts_app.student')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='school_app.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField()),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=7200))),
                ('venue', models.CharField(blank=True, max_length=150)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_app.course')),
                ('lecturer', models.ForeignKey(limit_choices_to={'user_type': 'Lecturer'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('link', models.URLField(blank=True, max_length=500, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_fee', models.DecimalField(decimal_places=2, max_digits=8)),
                ('course_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('library_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('total', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=8, null=True)),
                ('status', models.CharField(blank=True, choices=[('Paid', 'Paid'), ('Pending', 'Pending'), ('Not Paid', 'Not Paid')], null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=20, null=True)),
                ('admission_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='accounts_app.student')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, max_length=150)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_app.post')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.TextField()),
                ('is_image', models.ImageField(blank=True, null=True, upload_to='exams/')),
                ('option_a', models.CharField(max_length=255)),
                ('option_b', models.CharField(max_length=255)),
                ('option_c', models.CharField(max_length=255)),
                ('option_d', models.CharField(max_length=255)),
                ('correct_option', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=1)),
                ('mark', models.PositiveIntegerField(default=1)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_app.exam')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('receipt_number', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('issue_date', models.DateTimeField(auto_now_add=True)),
                ('admin_fee', models.DecimalField(decimal_places=2, max_digits=8)),
                ('course_fee', models.DecimalField(decimal_places=2, max_digits=8)),
                ('library_fee', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('payment_status', models.CharField(max_length=20)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='receipt', to='school_app.payment')),
                ('student_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts_app.student')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('grade', models.CharField(blank=True, max_length=2, null=True)),
                ('admission_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentResult', to='accounts_app.student')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='school_app.course')),
                ('exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='school_app.exam')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('week_day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], default='Monday')),
                ('start_time', models.TimeField(null=True)),
                ('end_time', models.TimeField(null=True)),
                ('semester', models.CharField(choices=[('First Semester', 'First Semester'), ('Second Semester', 'Second Semester')], max_length=20, null=True)),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=7200))),
                ('venue', models.CharField(blank=True, max_length=150)),
                ('academic_session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='school_app.academicsession')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='school_app.course')),
                ('lecturer', models.ForeignKey(limit_choices_to={'user_type': 'Lecturer'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Repost',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='school_app.post')),
                ('original_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='original_repost', to='school_app.post')),
                ('reposted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('school_app.post',),
        ),
    ]
